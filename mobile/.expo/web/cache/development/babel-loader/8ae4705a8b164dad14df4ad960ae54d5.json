{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { useAppSelector } from \"./app/hooks\";\nimport { store } from \"./app/store\";\nimport Home from \"./screens/Home\";\nimport Landing from \"./screens/Landing\";\nimport Waiting from \"./screens/Waiting\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return React.createElement(Provider, {\n    store: store\n  }, React.createElement(Main, null), React.createElement(StatusBar, {\n    style: \"dark\"\n  }));\n}\n\nfunction Main() {\n  var token = useAppSelector(function (state) {\n    return state.user.token;\n  });\n  return React.createElement(NavigationContainer, null, React.createElement(Stack.Navigator, null, token ? React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: Home\n  }) : React.createElement(React.Fragment, null, React.createElement(Stack.Screen, {\n    name: \"Landing\",\n    component: Landing,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Waiting\",\n    component: Waiting\n  }))));\n}","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Philosophy Project/philosophyapp/mobile/App.tsx"],"names":["StatusBar","React","Provider","NavigationContainer","createNativeStackNavigator","useAppSelector","store","Home","Landing","Waiting","Stack","App","Main","token","state","user","headerShown"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAAyBC,cAAzB;AAEA,SAASC,KAAT;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,OAAOC,OAAP;AAEA,IAAMC,KAAK,GAAGN,0BAA0B,EAAxC;AAEA,eAAe,SAASO,GAAT,GAAe;AAC7B,SACC,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEL;AAAjB,KACC,oBAAC,IAAD,OADD,EAEC,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,IAFD,CADD;AAMA;;AAED,SAASM,IAAT,GAAgB;AACf,MAAMC,KAAK,GAAGR,cAAc,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWF,KAAtB;AAAA,GAAD,CAA5B;AACA,SACC,oBAAC,mBAAD,QACC,oBAAC,KAAD,CAAO,SAAP,QACEA,KAAK,GACL,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,MAAnB;AAA0B,IAAA,SAAS,EAAEN;AAArC,IADK,GAGL,0CACC,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEC,OAAxC;AAAiD,IAAA,OAAO,EAAE;AAAEQ,MAAAA,WAAW,EAAE;AAAf;AAA1D,IADD,EAEC,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,SAAnB;AAA6B,IAAA,SAAS,EAAEP;AAAxC,IAFD,CAJF,CADD,CADD;AAcA","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { useAppDispatch, useAppSelector } from \"./app/hooks\";\r\n\r\nimport { store } from \"./app/store\";\r\nimport Home from \"./screens/Home\";\r\nimport Landing from \"./screens/Landing\";\r\nimport Waiting from \"./screens/Waiting\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<Main />\r\n\t\t\t<StatusBar style='dark' />\r\n\t\t</Provider>\r\n\t);\r\n}\r\n\r\nfunction Main() {\r\n\tconst token = useAppSelector((state) => state.user.token);\r\n\treturn (\r\n\t\t<NavigationContainer>\r\n\t\t\t<Stack.Navigator>\r\n\t\t\t\t{token ? (\r\n\t\t\t\t\t<Stack.Screen name='Home' component={Home} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Stack.Screen name='Landing' component={Landing} options={{ headerShown: false }} />\r\n\t\t\t\t\t\t<Stack.Screen name='Waiting' component={Waiting} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Stack.Navigator>\r\n\t\t</NavigationContainer>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}