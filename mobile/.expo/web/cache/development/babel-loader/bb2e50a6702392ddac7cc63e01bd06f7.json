{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kaley\\\\Desktop\\\\philosophyapp\\\\mobile\\\\screens\\\\Caption.tsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nexport default function Caption(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var aspectRatio = route.params.height / route.params.width;\n  var maxWidth = Dimensions.get(\"window\").width * 0.9;\n  var imgWidth = Math.min(route.params.width, maxWidth);\n  var imgHeight = Math.min(route.params.height, maxWidth * aspectRatio);\n  return React.createElement(KeyboardAwareScrollView, {\n    bounces: false,\n    contentContainerStyle: styles.container,\n    showsVerticalScrollIndicator: false,\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    extraScrollHeight: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: [styles.container],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }\n  }, React.createElement(Text, {\n    style: [{\n      fontSize: 20,\n      padding: 20,\n      fontWeight: \"600\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Add A Description:\"), React.createElement(Image, {\n    source: {\n      uri: route.params.uri\n    },\n    style: [{\n      width: imgWidth,\n      height: imgHeight\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Description\",\n    placeholderTextColor: \"#a6a6a6\",\n    multiline: true,\n    onChangeText: function onChangeText(description) {\n      return setDescription(description);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: [styles.buttonContainer, styles.center],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      navigation.navigate(\"Select\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      color: \"white\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, \"Cancel\")), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      Alert.alert(\"Success\", \"Your entry was submited.\");\n      navigation.navigate(\"Select\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 6\n    }\n  }, React.createElement(Text, {\n    style: [styles.text, {\n      color: \"white\"\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Submit\")))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  center: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\"\n  },\n  button: {\n    margin: 15,\n    padding: 5,\n    height: 50,\n    width: \"40%\",\n    backgroundColor: \"#33BBFF\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 5\n  },\n  text: {\n    fontSize: 18\n  },\n  input: {\n    width: \"90%\",\n    padding: 10,\n    margin: 10,\n    height: 130,\n    borderWidth: 1,\n    borderColor: \"black\",\n    color: \"black\"\n  }\n});","map":{"version":3,"sources":["C:/Users/kaley/Desktop/philosophyapp/mobile/screens/Caption.tsx"],"names":["React","useState","KeyboardAwareScrollView","Caption","route","navigation","description","setDescription","aspectRatio","params","height","width","maxWidth","Dimensions","get","imgWidth","Math","min","imgHeight","styles","container","x","y","fontSize","padding","fontWeight","uri","input","buttonContainer","center","button","navigate","text","color","Alert","alert","StyleSheet","create","alignItems","justifyContent","flexDirection","margin","backgroundColor","borderRadius","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, Image, TextInput, Pressable, Dimensions, Alert } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n\r\nexport default function Caption({ route, navigation }) {\r\n\tconst [description, setDescription] = useState(\"\");\r\n\r\n\tconst aspectRatio = route.params.height / route.params.width;\r\n\tconst maxWidth = Dimensions.get(\"window\").width * 0.9;\r\n\tconst imgWidth = Math.min(route.params.width, maxWidth);\r\n\tconst imgHeight = Math.min(route.params.height, maxWidth * aspectRatio);\r\n\r\n\treturn (\r\n\t\t<KeyboardAwareScrollView\r\n\t\t\t// keyboardDismissMode='on-drag'\r\n\t\t\tbounces={false}\r\n\t\t\tcontentContainerStyle={styles.container}\r\n\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\tresetScrollToCoords={{ x: 0, y: 0 }}\r\n\t\t\textraScrollHeight={20}>\r\n\t\t\t<View style={[styles.container]}>\r\n\t\t\t\t<Text style={[{ fontSize: 20, padding: 20, fontWeight: \"600\" }]}>Add A Description:</Text>\r\n\t\t\t\t<Image source={{ uri: route.params.uri }} style={[{ width: imgWidth, height: imgHeight }]} />\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='Description'\r\n\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\tmultiline={true}\r\n\t\t\t\t\tonChangeText={(description) => setDescription(description)}\r\n\t\t\t\t/>\r\n\t\t\t\t<View style={[styles.buttonContainer, styles.center]}>\r\n\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\tnavigation.navigate(\"Select\");\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Text style={[styles.text, { color: \"white\" }]}>Cancel</Text>\r\n\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\tAlert.alert(\"Success\", \"Your entry was submited.\");\r\n\t\t\t\t\t\t\tnavigation.navigate(\"Select\");\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Text style={[styles.text, { color: \"white\" }]}>Submit</Text>\r\n\t\t\t\t\t</Pressable>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</KeyboardAwareScrollView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcenter: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tbuttonContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: 15,\r\n\t\tpadding: 5,\r\n\t\theight: 50,\r\n\t\twidth: \"40%\",\r\n\t\tbackgroundColor: \"#33BBFF\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tborderRadius: 5,\r\n\t},\r\n\ttext: {\r\n\t\tfontSize: 18,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"90%\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\theight: 130,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: \"black\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}