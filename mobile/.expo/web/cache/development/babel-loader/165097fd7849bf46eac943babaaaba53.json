{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useAppDispatch } from \"../hooks/store\";\nimport { logout } from \"../features/auth/authSlice\";\nimport { useBlocksQuery } from \"../app/services/engage\";\nimport Block from \"../components/Block\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar img = require(\"../assets/landscape.jpg\");\n\nvar imgURI = Image.resolveAssetSource(img).uri;\nexport default function home(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var id = route.params.id;\n  var dispatch = useAppDispatch();\n\n  var _useBlocksQuery = useBlocksQuery(id),\n      _useBlocksQuery$data = _useBlocksQuery.data,\n      data = _useBlocksQuery$data === void 0 ? [] : _useBlocksQuery$data,\n      isFetching = _useBlocksQuery.isFetching;\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(Button, {\n          color: \"black\",\n          title: \"Sign Out\",\n          onPress: function onPress() {\n            dispatch(logout());\n          }\n        });\n      }\n    });\n  }, [navigation]);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    var title = item.title;\n    var image = item.mediaURL;\n    return _jsx(Block, {\n      title: title,\n      image: image,\n      navigation: navigation\n    }, item.id);\n  };\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(FlatList, {\n      style: {\n        width: \"100%\"\n      },\n      horizontal: true,\n      snapToInterval: 175,\n      showsHorizontalScrollIndicator: false,\n      contentContainerStyle: styles.listContainer,\n      showsVerticalScrollIndicator: false,\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.key;\n      },\n      renderItem: renderItem\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  separator: {\n    borderBottomColor: \"#666\",\n    borderBottomWidth: 1\n  },\n  listContainer: {\n    paddingLeft: Dimensions.get(\"window\").width / 2 - 87.5,\n    paddingRight: Dimensions.get(\"window\").width / 2 - 87.5,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Philosophy Project/philosophyapp/mobile/screens/Home.tsx"],"names":["React","useAppDispatch","logout","useBlocksQuery","Block","img","require","imgURI","Image","resolveAssetSource","uri","home","route","navigation","id","params","dispatch","data","isFetching","useLayoutEffect","setOptions","headerRight","renderItem","item","index","title","image","mediaURL","styles","container","width","listContainer","key","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","separator","borderBottomColor","borderBottomWidth","paddingLeft","Dimensions","get","paddingRight","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, Button, FlatList, Platform, Image, Dimensions, ActivityIndicator } from \"react-native\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks/store\";\r\nimport { logout, selectCurrentUser } from \"../features/auth/authSlice\";\r\nimport { useBlocksQuery } from \"../app/services/engage\";\r\nimport Block from \"../components/Block\";\r\nimport Slide from \"../components/Slide\";\r\nconst img = require(\"../assets/landscape.jpg\");\r\nconst imgURI = Image.resolveAssetSource(img).uri;\r\n\r\nexport default function home({ route, navigation }) {\r\n\tconst { id } = route.params;\r\n\t// const [isLoading, setIsLoading] = useState(true);\r\n\t// const user = useAppSelector(selectCurrentUser);\r\n\tconst dispatch = useAppDispatch();\r\n\tconst { data = [], isFetching } = useBlocksQuery(id);\r\n\r\n\t// const blocks = [\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 1 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 2 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 3 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 4 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 5 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 6 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 7 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 8 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 9 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 10 },\r\n\t// \t{ title: \"Landscapes\", image: imgURI, key: 11 },\r\n\t// ];\r\n\r\n\tReact.useLayoutEffect(() => {\r\n\t\tnavigation.setOptions({\r\n\t\t\theaderRight: () => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor='black'\r\n\t\t\t\t\ttitle='Sign Out'\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tdispatch(logout());\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t});\r\n\t}, [navigation]);\r\n\r\n\tconst renderItem = ({ item, index }) => {\r\n\t\tconst title = item.title;\r\n\t\tconst image = item.mediaURL;\r\n\t\treturn <Block key={item.id} title={title as String} image={image as String} navigation={navigation} />;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<FlatList\r\n\t\t\t\t// ItemSeparatorComponent={Platform.OS !== \"android\" && (() => <View style={[styles.separator]} />)}\r\n\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\thorizontal\r\n\t\t\t\t// pagingEnabled\r\n\t\t\t\tsnapToInterval={175}\r\n\t\t\t\tshowsHorizontalScrollIndicator={false}\r\n\t\t\t\tcontentContainerStyle={styles.listContainer}\r\n\t\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\t\tdata={data as any}\r\n\t\t\t\tkeyExtractor={(item) => item.key}\r\n\t\t\t\trenderItem={renderItem}></FlatList>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tseparator: {\r\n\t\tborderBottomColor: \"#666\",\r\n\t\tborderBottomWidth: 1,\r\n\t},\r\n\tlistContainer: {\r\n\t\tpaddingLeft: Dimensions.get(\"window\").width / 2 - 87.5,\r\n\t\tpaddingRight: Dimensions.get(\"window\").width / 2 - 87.5,\r\n\t\tpadding: 30,\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}