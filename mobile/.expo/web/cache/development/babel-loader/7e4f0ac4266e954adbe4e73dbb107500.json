{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kaley\\\\Desktop\\\\philosophyapp\\\\mobile\\\\screens\\\\Home.tsx\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/store\";\nimport { logout, selectCurrentUser } from \"../features/auth/authSlice\";\nimport Block from \"../components/Block\";\n\nvar img = require(\"../assets/landscape.jpg\");\n\nvar imgURI = Image.resolveAssetSource(img).uri;\nexport default function home(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var user = useAppSelector(selectCurrentUser);\n  var dispatch = useAppDispatch();\n  var blocks = [{\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 1\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 2\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 3\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 4\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 5\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 6\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 7\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 8\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 9\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 10\n  }, {\n    title: \"Landscapes\",\n    image: imgURI,\n    key: 11\n  }];\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Button, {\n          color: \"black\",\n          title: \"Sign Out\",\n          onPress: function onPress() {\n            dispatch(logout());\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 5\n          }\n        });\n      }\n    });\n  }, [navigation]);\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    var title = item.title;\n    var image = item.image;\n    return React.createElement(Block, {\n      title: title,\n      image: image,\n      navigation: navigation,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }\n  }, React.createElement(FlatList, {\n    style: {\n      width: \"100%\"\n    },\n    horizontal: true,\n    snapToInterval: 145,\n    showsHorizontalScrollIndicator: false,\n    contentContainerStyle: styles.listContainer,\n    showsVerticalScrollIndicator: false,\n    data: blocks,\n    keyExtractor: function keyExtractor(item) {\n      return item.key;\n    },\n    renderItem: renderItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }\n  }), React.createElement(Text, {\n    style: {\n      flex: 1,\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 4\n    }\n  }, \"Welcome \", user.firstName, \" \", user.lastName));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  separator: {\n    borderBottomColor: \"#666\",\n    borderBottomWidth: 1\n  },\n  listContainer: {\n    paddingLeft: Dimensions.get(\"window\").width / 2 - 72.5,\n    paddingRight: Dimensions.get(\"window\").width / 2 - 72.5,\n    padding: 30\n  }\n});","map":{"version":3,"sources":["C:/Users/kaley/Desktop/philosophyapp/mobile/screens/Home.tsx"],"names":["React","useState","useAppDispatch","useAppSelector","logout","selectCurrentUser","Block","img","require","imgURI","Image","resolveAssetSource","uri","home","navigation","isLoading","setIsLoading","user","dispatch","blocks","title","image","key","useLayoutEffect","setOptions","headerRight","renderItem","item","index","styles","container","width","listContainer","flex","fontSize","firstName","lastName","StyleSheet","create","backgroundColor","alignItems","justifyContent","separator","borderBottomColor","borderBottomWidth","paddingLeft","Dimensions","get","paddingRight","padding"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, Button, FlatList, Platform, Image, Dimensions, ActivityIndicator } from \"react-native\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks/store\";\r\nimport { logout, selectCurrentUser } from \"../features/auth/authSlice\";\r\nimport Block from \"../components/Block\";\r\nconst img = require(\"../assets/landscape.jpg\");\r\nconst imgURI = Image.resolveAssetSource(img).uri;\r\n\r\nexport default function home({ navigation }) {\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst user = useAppSelector(selectCurrentUser);\r\n\tconst dispatch = useAppDispatch();\r\n\r\n\tconst blocks = [\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 1 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 2 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 3 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 4 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 5 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 6 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 7 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 8 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 9 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 10 },\r\n\t\t{ title: \"Landscapes\", image: imgURI, key: 11 },\r\n\t];\r\n\r\n\tReact.useLayoutEffect(() => {\r\n\t\tnavigation.setOptions({\r\n\t\t\theaderRight: () => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor='black'\r\n\t\t\t\t\ttitle='Sign Out'\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tdispatch(logout());\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t});\r\n\t}, [navigation]);\r\n\r\n\tconst renderItem = ({ item, index }) => {\r\n\t\tconst title = item.title;\r\n\t\tconst image = item.image;\r\n\t\treturn <Block title={title as String} image={image as String} navigation={navigation} />;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t<FlatList\r\n\t\t\t\t// ItemSeparatorComponent={Platform.OS !== \"android\" && (() => <View style={[styles.separator]} />)}\r\n\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\thorizontal\r\n\t\t\t\t// pagingEnabled\r\n\t\t\t\tsnapToInterval={145}\r\n\t\t\t\tshowsHorizontalScrollIndicator={false}\r\n\t\t\t\tcontentContainerStyle={styles.listContainer}\r\n\t\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\t\tdata={blocks}\r\n\t\t\t\tkeyExtractor={(item) => item.key}\r\n\t\t\t\trenderItem={renderItem}></FlatList>\r\n\t\t\t<Text style={{ flex: 1, fontSize: 20 }}>\r\n\t\t\t\tWelcome {user.firstName} {user.lastName}\r\n\t\t\t</Text>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#fff\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t},\r\n\tseparator: {\r\n\t\tborderBottomColor: \"#666\",\r\n\t\tborderBottomWidth: 1,\r\n\t},\r\n\tlistContainer: {\r\n\t\tpaddingLeft: Dimensions.get(\"window\").width / 2 - 72.5,\r\n\t\tpaddingRight: Dimensions.get(\"window\").width / 2 - 72.5,\r\n\t\tpadding: 30,\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}