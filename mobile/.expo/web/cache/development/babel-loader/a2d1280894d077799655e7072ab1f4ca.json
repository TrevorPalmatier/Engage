{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { useAppSelector } from \"./hooks/store\";\nimport { selectCurrentUser } from \"./features/auth/authSlice\";\nimport { store } from \"./app/store\";\nimport Home from \"./screens/Home\";\nimport Landing from \"./screens/Landing\";\nimport Waiting from \"./screens/Waiting\";\nimport Login from \"./screens/Login\";\nimport Register from \"./screens/Register\";\nimport CameraScreen from \"./screens/CameraScreen\";\nimport Caption from \"./screens/Caption\";\nimport Prompt from \"./screens/Prompt\";\nimport Studies from \"./screens/Studies\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar PromptStack = createNativeStackNavigator();\nexport default function App() {\n  return _jsxs(Provider, {\n    store: store,\n    children: [_jsx(Main, {}), _jsx(StatusBar, {\n      style: \"dark\"\n    })]\n  });\n}\n\nfunction Main() {\n  var user = useAppSelector(selectCurrentUser);\n  return _jsx(NavigationContainer, {\n    children: _jsx(Stack.Navigator, {\n      children: user ? _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Studies\",\n          component: Studies\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home\n        }), _jsx(Stack.Screen, {\n          name: \"PromptTabs\",\n          component: PromptTabScreens\n        })]\n      }) : _jsxs(_Fragment, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Landing\",\n          component: Landing,\n          options: {\n            headerShown: false\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Waiting\",\n          component: Waiting\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"Signup\",\n          component: Register\n        })]\n      })\n    })\n  });\n}\n\nfunction PromptTabScreens(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      title: route.params.title\n    });\n  }, [navigation]);\n  return _jsxs(PromptStack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(PromptStack.Screen, {\n      name: \"Select\",\n      component: Prompt\n    }), _jsx(PromptStack.Screen, {\n      name: \"Camera\",\n      component: CameraScreen\n    }), _jsx(PromptStack.Screen, {\n      name: \"Submit\",\n      component: Caption\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Philosophy Project/philosophyapp/mobile/App.tsx"],"names":["StatusBar","React","Provider","NavigationContainer","createNativeStackNavigator","useAppSelector","selectCurrentUser","store","Home","Landing","Waiting","Login","Register","CameraScreen","Caption","Prompt","Studies","Stack","PromptStack","App","Main","user","PromptTabScreens","headerShown","route","navigation","useLayoutEffect","setOptions","title","params"],"mappings":"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","sourcesContent":["import { StatusBar } from \"expo-status-bar\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport { useAppDispatch, useAppSelector } from \"./hooks/store\";\r\nimport { selectCurrentUser } from \"./features/auth/authSlice\";\r\n\r\nimport { store } from \"./app/store\";\r\nimport Home from \"./screens/Home\";\r\nimport Landing from \"./screens/Landing\";\r\nimport Waiting from \"./screens/Waiting\";\r\nimport Login from \"./screens/Login\";\r\nimport Register from \"./screens/Register\";\r\nimport CameraScreen from \"./screens/CameraScreen\";\r\nimport Caption from \"./screens/Caption\";\r\nimport Prompt from \"./screens/Prompt\";\r\nimport Studies from \"./screens/Studies\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\nconst PromptStack = createNativeStackNavigator();\r\n\r\nexport default function App() {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<Main />\r\n\t\t\t<StatusBar style='dark' />\r\n\t\t</Provider>\r\n\t);\r\n}\r\n\r\nfunction Main() {\r\n\tconst user = useAppSelector(selectCurrentUser);\r\n\r\n\treturn (\r\n\t\t<NavigationContainer>\r\n\t\t\t<Stack.Navigator>\r\n\t\t\t\t{user ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Stack.Screen name='Studies' component={Studies} />\r\n\t\t\t\t\t\t<Stack.Screen name='Home' component={Home} />\r\n\t\t\t\t\t\t<Stack.Screen name='PromptTabs' component={PromptTabScreens} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Stack.Screen name='Landing' component={Landing} options={{ headerShown: false }} />\r\n\t\t\t\t\t\t<Stack.Screen name='Waiting' component={Waiting} />\r\n\t\t\t\t\t\t<Stack.Screen name='Login' component={Login} />\r\n\t\t\t\t\t\t<Stack.Screen name='Signup' component={Register} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Stack.Navigator>\r\n\t\t</NavigationContainer>\r\n\t);\r\n}\r\n\r\nfunction PromptTabScreens({ route, navigation }) {\r\n\tReact.useLayoutEffect(() => {\r\n\t\tnavigation.setOptions({\r\n\t\t\ttitle: route.params.title,\r\n\t\t});\r\n\t}, [navigation]);\r\n\treturn (\r\n\t\t<PromptStack.Navigator\r\n\t\t\tscreenOptions={{\r\n\t\t\t\theaderShown: false,\r\n\t\t\t}}>\r\n\t\t\t<PromptStack.Screen name='Select' component={Prompt} />\r\n\t\t\t<PromptStack.Screen name='Camera' component={CameraScreen} />\r\n\t\t\t<PromptStack.Screen name='Submit' component={Caption} />\r\n\t\t</PromptStack.Navigator>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}