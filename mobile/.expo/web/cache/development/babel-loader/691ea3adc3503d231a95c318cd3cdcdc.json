{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\kaley\\\\Desktop\\\\philosophyapp\\\\mobile\\\\screens\\\\Register.tsx\";\nimport React, { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { useSignupMutation } from \"../app/services/auth\";\n\nfunction Register(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstName = _useState6[0],\n      setFirstName = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastName = _useState8[0],\n      setLastName = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      password = _useState12[0],\n      setPassword = _useState12[1];\n\n  var _useSignupMutation = useSignupMutation(),\n      _useSignupMutation2 = _slicedToArray(_useSignupMutation, 2),\n      signup = _useSignupMutation2[0],\n      isLoading = _useSignupMutation2[1].isLoading;\n\n  var onSignUp = function onSignUp() {\n    var payload = {\n      firstName: firstName,\n      lastName: lastName,\n      email: email,\n      password: password\n    };\n    signup(payload).unwrap().then(function () {\n      Alert.alert(\"Success\", \"User has been registered. Please Log-in.\");\n      navigation.replace(\"Login\");\n    }).catch(function (err) {\n      setError(err.data.message);\n    });\n  };\n\n  return React.createElement(KeyboardAwareScrollView, {\n    bounces: false,\n    contentContainerStyle: styles.main,\n    showsVerticalScrollIndicator: false,\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    extraScrollHeight: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }\n  }, React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"First Name\",\n    placeholderTextColor: \"#a6a6a6\",\n    onChangeText: function onChangeText(name) {\n      return setFirstName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Last Name\",\n    placeholderTextColor: \"#a6a6a6\",\n    onChangeText: function onChangeText(name) {\n      return setLastName(name);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    keyboardType: \"email-address\",\n    placeholder: \"email\",\n    placeholderTextColor: \"#a6a6a6\",\n    onChangeText: function onChangeText(email) {\n      return setEmail(email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"password\",\n    placeholderTextColor: \"#a6a6a6\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(pw) {\n      return setPassword(pw);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), React.createElement(View, {\n    style: error ? styles.errorBox : styles.blank,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.errorText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }\n  }, error)), React.createElement(Pressable, {\n    style: styles.button,\n    onPress: function onPress() {\n      onSignUp();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: \"white\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 6\n    }\n  }, \"Register\"))));\n}\n\nvar styles = StyleSheet.create({\n  main: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  container: {\n    width: \"100%\",\n    paddingTop: 50,\n    alignItems: \"center\"\n  },\n  input: {\n    width: \"80%\",\n    padding: 10,\n    margin: 10,\n    borderWidth: 1,\n    borderColor: \"black\",\n    color: \"black\"\n  },\n  button: {\n    margin: 15,\n    padding: 5,\n    height: 50,\n    width: \"60%\",\n    backgroundColor: \"#33BBFF\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 5\n  },\n  errorBox: {\n    backgroundColor: \"#FF8080\",\n    width: \"80%\",\n    height: 70,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 5\n  },\n  errorText: {\n    color: \"white\",\n    fontSize: 15\n  },\n  blank: {}\n});\nexport default Register;","map":{"version":3,"sources":["C:/Users/kaley/Desktop/philosophyapp/mobile/screens/Register.tsx"],"names":["React","useState","KeyboardAwareScrollView","useSignupMutation","Register","navigation","loading","setLoading","error","setError","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","signup","isLoading","onSignUp","payload","unwrap","then","Alert","alert","replace","catch","err","data","message","styles","main","x","y","container","input","name","pw","errorBox","blank","errorText","button","color","StyleSheet","create","width","alignItems","paddingTop","padding","margin","borderWidth","borderColor","height","backgroundColor","justifyContent","borderRadius","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TextInput, View, StyleSheet, Alert, Text, Pressable } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\nimport { SignupRequest, useSignupMutation } from \"../app/services/auth\";\r\n\r\nfunction Register({ navigation }) {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [firstName, setFirstName] = useState(\"\");\r\n\tconst [lastName, setLastName] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [signup, { isLoading }] = useSignupMutation();\r\n\r\n\tconst onSignUp = () => {\r\n\t\tconst payload = {\r\n\t\t\tfirstName,\r\n\t\t\tlastName,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t} as SignupRequest;\r\n\t\tsignup(payload)\r\n\t\t\t.unwrap()\r\n\t\t\t.then(() => {\r\n\t\t\t\tAlert.alert(\"Success\", \"User has been registered. Please Log-in.\");\r\n\t\t\t\tnavigation.replace(\"Login\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\tsetError(err.data.message);\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAwareScrollView\r\n\t\t\t// keyboardDismissMode='on-drag'\r\n\t\t\tbounces={false}\r\n\t\t\tcontentContainerStyle={styles.main}\r\n\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\tresetScrollToCoords={{ x: 0, y: 0 }}\r\n\t\t\textraScrollHeight={20}>\r\n\t\t\t<View style={styles.container}>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='First Name'\r\n\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\tonChangeText={(name) => setFirstName(name)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='Last Name'\r\n\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\tonChangeText={(name) => setLastName(name)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tkeyboardType='email-address'\r\n\t\t\t\t\tplaceholder='email'\r\n\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\tonChangeText={(email) => setEmail(email)}\r\n\t\t\t\t/>\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\tsecureTextEntry={true}\r\n\t\t\t\t\tonChangeText={(pw) => setPassword(pw)}\r\n\t\t\t\t/>\r\n\t\t\t\t<View style={error ? styles.errorBox : styles.blank}>\r\n\t\t\t\t\t<Text style={styles.errorText}>{error}</Text>\r\n\t\t\t\t</View>\r\n\t\t\t\t<Pressable\r\n\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tonSignUp();\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t<Text style={{ color: \"white\" }}>Register</Text>\r\n\t\t\t\t</Pressable>\r\n\t\t\t</View>\r\n\t\t</KeyboardAwareScrollView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\twidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\tpaddingTop: 50,\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"80%\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: \"black\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: 15,\r\n\t\tpadding: 5,\r\n\t\theight: 50,\r\n\t\twidth: \"60%\",\r\n\t\tbackgroundColor: \"#33BBFF\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tborderRadius: 5,\r\n\t},\r\n\terrorBox: {\r\n\t\tbackgroundColor: \"#FF8080\",\r\n\t\twidth: \"80%\",\r\n\t\theight: 70,\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\tpadding: 5,\r\n\t},\r\n\terrorText: {\r\n\t\tcolor: \"white\",\r\n\t\tfontSize: 15,\r\n\t},\r\n\tblank: {},\r\n});\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}