{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { api } from \"../../app/services/engage\";\nvar authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    user: null,\n    token: null\n  },\n  reducers: {\n    logout: function logout(state) {\n      state.user = null;\n      state.token = null;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addMatcher(api.endpoints.login.matchFulfilled, function (state, _ref) {\n      var payload = _ref.payload;\n      state.token = payload.token;\n      state.user = payload.user;\n    });\n  }\n});\nexport default authSlice.reducer;\nvar logout = authSlice.actions.logout;\nexport { logout };\nexport var selectCurrentUser = function selectCurrentUser(state) {\n  return state.auth.user;\n};","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Philosophy Project/philosophyapp/mobile/features/auth/authSlice.ts"],"names":["createSlice","api","authSlice","name","initialState","user","token","reducers","logout","state","extraReducers","builder","addMatcher","endpoints","login","matchFulfilled","payload","reducer","actions","selectCurrentUser","auth"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,GAAT;AAQA,IAAMC,SAAS,GAAGF,WAAW,CAAC;AAC7BG,EAAAA,IAAI,EAAE,MADuB;AAE7BC,EAAAA,YAAY,EAAE;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GAFe;AAG7BC,EAAAA,QAAQ,EAAE;AACTC,IAAAA,MAAM,EAAE,gBAACC,KAAD,EAAW;AAClBA,MAAAA,KAAK,CAACJ,IAAN,GAAa,IAAb;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACA;AAJQ,GAHmB;AAS7BI,EAAAA,aAAa,EAAE,uBAACC,OAAD,EAAa;AAC3BA,IAAAA,OAAO,CAACC,UAAR,CAAmBX,GAAG,CAACY,SAAJ,CAAcC,KAAd,CAAoBC,cAAvC,EAAuD,UAACN,KAAD,QAAwB;AAAA,UAAdO,OAAc,QAAdA,OAAc;AAC9EP,MAAAA,KAAK,CAACH,KAAN,GAAcU,OAAO,CAACV,KAAtB;AACAG,MAAAA,KAAK,CAACJ,IAAN,GAAaW,OAAO,CAACX,IAArB;AACA,KAHD;AAIA;AAd4B,CAAD,CAA7B;AAiBA,eAAeH,SAAS,CAACe,OAAzB;AAEO,IAAQT,MAAR,GAAmBN,SAAS,CAACgB,OAA7B,CAAQV,MAAR;;AAEP,OAAO,IAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,CAACV,KAAD;AAAA,SAAsBA,KAAK,CAACW,IAAN,CAAWf,IAAjC;AAAA,CAA1B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { api, User } from \"../../app/services/engage\";\r\nimport type { RootState } from \"../../app/store\";\r\n\r\ntype AuthState = {\r\n\tuser: User | null;\r\n\ttoken: string | null;\r\n};\r\n\r\nconst authSlice = createSlice({\r\n\tname: \"auth\",\r\n\tinitialState: { user: null, token: null } as AuthState,\r\n\treducers: {\r\n\t\tlogout: (state) => {\r\n\t\t\tstate.user = null;\r\n\t\t\tstate.token = null;\r\n\t\t},\r\n\t},\r\n\textraReducers: (builder) => {\r\n\t\tbuilder.addMatcher(api.endpoints.login.matchFulfilled, (state, { payload }) => {\r\n\t\t\tstate.token = payload.token;\r\n\t\t\tstate.user = payload.user;\r\n\t\t});\r\n\t},\r\n});\r\n\r\nexport default authSlice.reducer;\r\n\r\nexport const { logout } = authSlice.actions;\r\n\r\nexport const selectCurrentUser = (state: RootState) => state.auth.user;\r\n"]},"metadata":{},"sourceType":"module"}