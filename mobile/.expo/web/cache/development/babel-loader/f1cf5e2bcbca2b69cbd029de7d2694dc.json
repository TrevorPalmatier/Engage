{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Caption(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      description = _useState2[0],\n      setDescription = _useState2[1];\n\n  var aspectRatio = route.params.height / route.params.width;\n  var maxWidth = Dimensions.get(\"window\").width * 0.9;\n  var imgUri = route.params.uri;\n  var imgName = route.params.name;\n  var imgType = route.params.type;\n  var imgWidth = Math.min(route.params.width, maxWidth);\n  var imgHeight = Math.min(route.params.height, maxWidth * aspectRatio);\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      photo = _useState6[0],\n      setPhoto = _useState6[1];\n\n  var uploadImage = function uploadImage(photo) {\n    var data = new FormData();\n    data.append(\"file\", photo);\n    data.append(\"upload_preset\", \"engageapp\");\n    data.append(\"cloud_name\", \"engageapp\");\n    fetch(\"https://api.cloudinary.com/v1_1/engageapp/upload\", {\n      method: \"POST\",\n      body: data\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      setPhoto(data.secure_url);\n    }).catch(function (err) {\n      Alert.alert(\"An Error Occured While Uploading\");\n    });\n  };\n\n  var uploadPhoto = function uploadPhoto() {\n    var source;\n    return _regeneratorRuntime.async(function uploadPhoto$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            Alert.alert(\"Success\", \"Your entry was submited.\");\n            source = {\n              uri: imgUri,\n              type: imgType,\n              name: imgName\n            };\n            uploadImage(source);\n            navigation.navigate(\"Select\");\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsx(KeyboardAwareScrollView, {\n    bounces: false,\n    contentContainerStyle: styles.container,\n    showsVerticalScrollIndicator: false,\n    resetScrollToCoords: {\n      x: 0,\n      y: 0\n    },\n    extraScrollHeight: 20,\n    children: _jsxs(View, {\n      style: [styles.container],\n      children: [_jsx(Text, {\n        style: [{\n          fontSize: 20,\n          padding: 20,\n          fontWeight: \"600\"\n        }],\n        children: \"Add A Description:\"\n      }), _jsx(Image, {\n        source: {\n          uri: route.params.uri\n        },\n        style: [{\n          width: imgWidth,\n          height: imgHeight\n        }]\n      }), _jsx(TextInput, {\n        style: styles.input,\n        placeholder: \"Description\",\n        placeholderTextColor: \"#a6a6a6\",\n        multiline: true,\n        onChangeText: function onChangeText(description) {\n          return setDescription(description);\n        }\n      }), _jsxs(View, {\n        style: [styles.buttonContainer, styles.center],\n        children: [_jsx(Pressable, {\n          style: styles.button,\n          onPress: function onPress() {\n            navigation.navigate(\"Select\");\n          },\n          children: _jsx(Text, {\n            style: [styles.text, {\n              color: \"white\"\n            }],\n            children: \"Cancel\"\n          })\n        }), _jsx(Pressable, {\n          style: styles.button,\n          onPress: uploadPhoto,\n          children: _jsx(Text, {\n            style: [styles.text, {\n              color: \"white\"\n            }],\n            children: \"Submit\"\n          })\n        })]\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    alignItems: \"center\"\n  },\n  center: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    flexDirection: \"row\"\n  },\n  button: {\n    margin: 15,\n    padding: 5,\n    height: 50,\n    width: \"40%\",\n    backgroundColor: \"#33BBFF\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 5\n  },\n  text: {\n    fontSize: 18\n  },\n  input: {\n    width: \"90%\",\n    padding: 10,\n    margin: 10,\n    height: 130,\n    borderWidth: 1,\n    borderColor: \"black\",\n    color: \"black\"\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Philosophy Project/philosophyapp/mobile/screens/Caption.tsx"],"names":["React","useState","KeyboardAwareScrollView","Caption","route","navigation","description","setDescription","aspectRatio","params","height","width","maxWidth","Dimensions","get","imgUri","uri","imgName","name","imgType","type","imgWidth","Math","min","imgHeight","error","setError","photo","setPhoto","uploadImage","data","FormData","append","fetch","method","body","then","res","json","secure_url","catch","err","Alert","alert","uploadPhoto","source","navigate","styles","container","x","y","fontSize","padding","fontWeight","input","buttonContainer","center","button","text","color","StyleSheet","create","alignItems","justifyContent","flexDirection","margin","backgroundColor","borderRadius","borderWidth","borderColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, Text, StyleSheet, Image, TextInput, Pressable, Dimensions, Alert } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from \"react-native-keyboard-aware-scroll-view\";\r\n// import { uploadImage } from \"../app/services/images\";\r\n\r\nexport default function Caption({ route, navigation }) {\r\n\tconst [description, setDescription] = useState(\"\");\r\n\r\n\tconst aspectRatio = route.params.height / route.params.width;\r\n\tconst maxWidth = Dimensions.get(\"window\").width * 0.9;\r\n\tconst imgUri = route.params.uri;\r\n\tconst imgName = route.params.name;\r\n\tconst imgType = route.params.type;\r\n\tconst imgWidth = Math.min(route.params.width, maxWidth);\r\n\tconst imgHeight = Math.min(route.params.height, maxWidth * aspectRatio);\r\n\r\n\tconst [error, setError] = useState(\"\");\r\n\tconst [photo, setPhoto] = useState(null);\r\n\r\n\tconst uploadImage = (photo) => {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append(\"file\", photo);\r\n\t\tdata.append(\"upload_preset\", \"engageapp\");\r\n\t\tdata.append(\"cloud_name\", \"engageapp\");\r\n\t\tfetch(\"https://api.cloudinary.com/v1_1/engageapp/upload\", {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: data,\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetPhoto(data.secure_url);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tAlert.alert(\"An Error Occured While Uploading\");\r\n\t\t\t});\r\n\t};\r\n\r\n\tconst uploadPhoto = async () => {\r\n\t\tAlert.alert(\"Success\", \"Your entry was submited.\");\r\n\t\tconst source = { uri: imgUri, type: imgType, name: imgName };\r\n\t\tuploadImage(source);\r\n\t\tnavigation.navigate(\"Select\");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<KeyboardAwareScrollView\r\n\t\t\t// keyboardDismissMode='on-drag'\r\n\t\t\tbounces={false}\r\n\t\t\tcontentContainerStyle={styles.container}\r\n\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\tresetScrollToCoords={{ x: 0, y: 0 }}\r\n\t\t\textraScrollHeight={20}>\r\n\t\t\t<View style={[styles.container]}>\r\n\t\t\t\t<Text style={[{ fontSize: 20, padding: 20, fontWeight: \"600\" }]}>Add A Description:</Text>\r\n\t\t\t\t<Image source={{ uri: route.params.uri }} style={[{ width: imgWidth, height: imgHeight }]} />\r\n\t\t\t\t<TextInput\r\n\t\t\t\t\tstyle={styles.input}\r\n\t\t\t\t\tplaceholder='Description'\r\n\t\t\t\t\tplaceholderTextColor='#a6a6a6'\r\n\t\t\t\t\tmultiline={true}\r\n\t\t\t\t\tonChangeText={(description) => setDescription(description)}\r\n\t\t\t\t/>\r\n\t\t\t\t<View style={[styles.buttonContainer, styles.center]}>\r\n\t\t\t\t\t<Pressable\r\n\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\tnavigation.navigate(\"Select\");\r\n\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t<Text style={[styles.text, { color: \"white\" }]}>Cancel</Text>\r\n\t\t\t\t\t</Pressable>\r\n\t\t\t\t\t<Pressable style={styles.button} onPress={uploadPhoto}>\r\n\t\t\t\t\t\t<Text style={[styles.text, { color: \"white\" }]}>Submit</Text>\r\n\t\t\t\t\t</Pressable>\r\n\t\t\t\t</View>\r\n\t\t\t</View>\r\n\t\t</KeyboardAwareScrollView>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\twidth: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tcenter: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tbuttonContainer: {\r\n\t\tflexDirection: \"row\",\r\n\t},\r\n\tbutton: {\r\n\t\tmargin: 15,\r\n\t\tpadding: 5,\r\n\t\theight: 50,\r\n\t\twidth: \"40%\",\r\n\t\tbackgroundColor: \"#33BBFF\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tborderRadius: 5,\r\n\t},\r\n\ttext: {\r\n\t\tfontSize: 18,\r\n\t},\r\n\tinput: {\r\n\t\twidth: \"90%\",\r\n\t\tpadding: 10,\r\n\t\tmargin: 10,\r\n\t\theight: 130,\r\n\t\tborderWidth: 1,\r\n\t\tborderColor: \"black\",\r\n\t\tcolor: \"black\",\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}