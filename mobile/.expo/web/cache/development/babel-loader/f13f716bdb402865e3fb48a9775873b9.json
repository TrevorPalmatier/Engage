{"ast":null,"code":"import React, { useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useAppDispatch, useAppSelector } from \"../hooks/store\";\nimport { logout, selectCurrentUser } from \"../features/auth/authSlice\";\nimport { FlatList } from \"react-native-gesture-handler\";\nimport StudyCard from \"../components/StudyCard\";\nimport { useStudiesQuery } from \"../app/services/engage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function CharacterSelectScreen(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useAppDispatch();\n  var user = useAppSelector(selectCurrentUser);\n\n  var _useStudiesQuery = useStudiesQuery(user.id),\n      _useStudiesQuery$data = _useStudiesQuery.data,\n      data = _useStudiesQuery$data === void 0 ? [] : _useStudiesQuery$data,\n      isFetching = _useStudiesQuery.isFetching;\n\n  useEffect(function () {}, [data]);\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return _jsx(Button, {\n          color: \"black\",\n          title: \"Sign Out\",\n          onPress: function onPress() {\n            dispatch(logout());\n          }\n        });\n      }\n    });\n  }, [navigation]);\n\n  var handleAddStudy = function handleAddStudy() {\n    Alert.alert(\"Does nothing for now\");\n  };\n\n  var handleSelectStudy = function handleSelectStudy(id) {\n    navigation.navigate(\"Home\", {\n      id: id\n    });\n  };\n\n  var handleDeleteStudy = function handleDeleteStudy() {\n    Alert.alert(\"Does nothing for now\");\n  };\n\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n        index = _ref2.index;\n    return _jsx(StudyCard, {\n      id: item.id,\n      index: index,\n      name: item.title,\n      select: handleSelectStudy,\n      delete: handleDeleteStudy\n    }, item.id);\n  };\n\n  return _jsx(_Fragment, {\n    children: isFetching ? _jsx(View, {\n      style: styles.main,\n      children: _jsx(Text, {\n        children: \"Is loading\"\n      })\n    }) : _jsxs(View, {\n      style: styles.main,\n      children: [_jsx(FlatList, {\n        ItemSeparatorComponent: Platform.OS !== \"android\" && function () {\n          return _jsx(View, {\n            style: [styles.separator]\n          });\n        },\n        style: {\n          width: \"100%\"\n        },\n        showsVerticalScrollIndicator: false,\n        data: data,\n        renderItem: renderItem\n      }), _jsx(View, {\n        style: styles.buttonContainer,\n        children: _jsx(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            handleAddStudy();\n          },\n          children: _jsx(Text, {\n            style: [{\n              color: \"white\",\n              fontSize: 18\n            }],\n            children: \"Join Study\"\n          })\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    alignItems: \"center\"\n  },\n  buttonContainer: {\n    width: \"100%\",\n    height: 110,\n    alignItems: \"center\",\n    borderTopColor: \"#666\",\n    borderTopWidth: 1\n  },\n  button: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"90%\",\n    height: 60,\n    backgroundColor: \"#33BBFF\",\n    margin: 10,\n    borderRadius: 4\n  },\n  separator: {\n    borderBottomColor: \"#666\",\n    borderBottomWidth: 1\n  }\n});","map":{"version":3,"sources":["C:/Users/trevo/Documents/1 - Philosophy Project/philosophyapp/mobile/screens/Studies.tsx"],"names":["React","useEffect","useAppDispatch","useAppSelector","logout","selectCurrentUser","FlatList","StudyCard","useStudiesQuery","CharacterSelectScreen","navigation","dispatch","user","id","data","isFetching","useLayoutEffect","setOptions","headerRight","handleAddStudy","Alert","alert","handleSelectStudy","navigate","handleDeleteStudy","renderItem","item","index","title","styles","main","Platform","OS","separator","width","buttonContainer","button","color","fontSize","StyleSheet","create","flex","height","alignItems","borderTopColor","borderTopWidth","justifyContent","backgroundColor","margin","borderRadius","borderBottomColor","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity, Platform, Alert, Button, Pressable } from \"react-native\";\r\nimport { useAppDispatch, useAppSelector } from \"../hooks/store\";\r\nimport { logout, selectCurrentUser } from \"../features/auth/authSlice\";\r\nimport { FlatList } from \"react-native-gesture-handler\";\r\nimport { useFocusEffect } from \"@react-navigation/core\";\r\nimport StudyCard from \"../components/StudyCard\";\r\nimport { useStudiesQuery } from \"../app/services/engage\";\r\n\r\nexport default function CharacterSelectScreen({ navigation }) {\r\n\tconst dispatch = useAppDispatch();\r\n\tconst user = useAppSelector(selectCurrentUser);\r\n\tconst { data = [], isFetching } = useStudiesQuery(user.id);\r\n\r\n\tuseEffect(() => {\r\n\t\t// console.log(data);\r\n\t}, [data]);\r\n\r\n\tReact.useLayoutEffect(() => {\r\n\t\tnavigation.setOptions({\r\n\t\t\theaderRight: () => (\r\n\t\t\t\t<Button\r\n\t\t\t\t\tcolor='black'\r\n\t\t\t\t\ttitle='Sign Out'\r\n\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\tdispatch(logout());\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t),\r\n\t\t});\r\n\t}, [navigation]);\r\n\r\n\tconst handleAddStudy = () => {\r\n\t\tAlert.alert(\"Does nothing for now\");\r\n\t\t// navigation.navigate(\"CharacterCreation\");\r\n\t};\r\n\r\n\tconst handleSelectStudy = (id) => {\r\n\t\tnavigation.navigate(\"Home\", { id });\r\n\t};\r\n\r\n\tconst handleDeleteStudy = () => {\r\n\t\tAlert.alert(\"Does nothing for now\");\r\n\t};\r\n\r\n\tconst renderItem = ({ item, index }) => {\r\n\t\treturn (\r\n\t\t\t<StudyCard\r\n\t\t\t\tkey={item.id}\r\n\t\t\t\tid={item.id}\r\n\t\t\t\tindex={index}\r\n\t\t\t\tname={item.title}\r\n\t\t\t\tselect={handleSelectStudy}\r\n\t\t\t\tdelete={handleDeleteStudy}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isFetching ? (\r\n\t\t\t\t<View style={styles.main}>\r\n\t\t\t\t\t<Text>Is loading</Text>\r\n\t\t\t\t</View>\r\n\t\t\t) : (\r\n\t\t\t\t<View style={styles.main}>\r\n\t\t\t\t\t{/* <ScrollView\r\n\t\t\t\tstyle={{ width: \"100%\", backgroundColor: \"#404040\" }}\r\n\t\t\t\tcontentContainerStyle={styles.container}\r\n\t\t\t\tshowsVerticalScrollIndicator={false}>\r\n\t\t\t\t{characters.map((character, index) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<CharacterCard\r\n\t\t\t\t\t\tkey={character.id}\r\n\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\tname={character.data().name}\r\n\t\t\t\t\t\tselect={selectCharacter}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ScrollView> */}\r\n\t\t\t\t\t<FlatList\r\n\t\t\t\t\t\tItemSeparatorComponent={\r\n\t\t\t\t\t\t\tPlatform.OS !== \"android\" && (() => <View style={[styles.separator]} />)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstyle={{ width: \"100%\" }}\r\n\t\t\t\t\t\t// contentContainerStyle={styles.container}\r\n\t\t\t\t\t\tshowsVerticalScrollIndicator={false}\r\n\t\t\t\t\t\tdata={data as any}\r\n\t\t\t\t\t\trenderItem={renderItem}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<View style={styles.buttonContainer}>\r\n\t\t\t\t\t\t<TouchableOpacity\r\n\t\t\t\t\t\t\tstyle={styles.button}\r\n\t\t\t\t\t\t\tonPress={() => {\r\n\t\t\t\t\t\t\t\thandleAddStudy();\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t<Text style={[{ color: \"white\", fontSize: 18 }]}>Join Study</Text>\r\n\t\t\t\t\t\t</TouchableOpacity>\r\n\t\t\t\t\t</View>\r\n\t\t\t\t</View>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n\tmain: {\r\n\t\tflex: 1,\r\n\t\t// backgroundColor: \"#404040\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\talignItems: \"center\",\r\n\t},\r\n\tbuttonContainer: {\r\n\t\twidth: \"100%\",\r\n\t\theight: 110,\r\n\t\talignItems: \"center\",\r\n\t\tborderTopColor: \"#666\",\r\n\t\tborderTopWidth: 1,\r\n\t},\r\n\tbutton: {\r\n\t\tjustifyContent: \"center\",\r\n\t\talignItems: \"center\",\r\n\t\twidth: \"90%\",\r\n\t\theight: 60,\r\n\t\tbackgroundColor: \"#33BBFF\",\r\n\t\tmargin: 10,\r\n\t\tborderRadius: 4,\r\n\t},\r\n\tseparator: {\r\n\t\tborderBottomColor: \"#666\",\r\n\t\tborderBottomWidth: 1,\r\n\t},\r\n});\r\n"]},"metadata":{},"sourceType":"module"}